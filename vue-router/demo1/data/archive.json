{
    "title": "Getting Started",
    "by": "lixuguang",
    "date": "2017/3/10",
    "tags": ["Vue-router", "Vue", "ES2015"],
    "content" : "\n<blockquote>\n<p>教程中的案例代码将使用 <a href=\"https://github.com/lukehoban/es6features\" target=\"_blank\">ES2015</a> 来编写。</p>\n</blockquote>\n<p>用 Vue.js + vue-router 创建单页应用，是非常简单的。使用 Vue.js 时，我们就已经把组件组合成一个应用了，当你要把 vue-router 加进来，只需要配置组件和路由映射，然后告诉 vue-router 在哪里渲染它们。下面是个基本例子：</p>\n<h3 id=\"html\">HTML</h3>\n<pre><code class=\"lang-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"https://unpkg.com/vue/dist/vue.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"https://unpkg.com/vue-router/dist/vue-router.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"app\"</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>Hello App!<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>\n    <span class=\"hljs-comment\">&lt;!-- 使用 router-link 组件来导航. --&gt;</span>\n    <span class=\"hljs-comment\">&lt;!-- 通过传入 `to` 属性指定链接. --&gt;</span>\n    <span class=\"hljs-comment\">&lt;!-- &lt;router-link&gt; 默认会被渲染成一个 `&lt;a&gt;` 标签 --&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">router-link</span> <span class=\"hljs-attr\">to</span>=<span class=\"hljs-string\">\"/foo\"</span>&gt;</span>Go to Foo<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">router-link</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">router-link</span> <span class=\"hljs-attr\">to</span>=<span class=\"hljs-string\">\"/bar\"</span>&gt;</span>Go to Bar<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">router-link</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n  <span class=\"hljs-comment\">&lt;!-- 路由出口 --&gt;</span>\n  <span class=\"hljs-comment\">&lt;!-- 路由匹配到的组件将渲染在这里 --&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">router-view</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">router-view</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n<h3 id=\"javascript\">JavaScript</h3>\n<pre><code class=\"lang-js\"><span class=\"hljs-comment\">// 0. 如果使用模块化机制编程，導入Vue和VueRouter，要调用 Vue.use(VueRouter)</span>\n\n<span class=\"hljs-comment\">// 1. 定义（路由）组件。</span>\n<span class=\"hljs-comment\">// 可以从其他文件 import 进来</span>\n<span class=\"hljs-keyword\">const</span> Foo = { template: <span class=\"hljs-string\">'&lt;div&gt;foo&lt;/div&gt;'</span> }\n<span class=\"hljs-keyword\">const</span> Bar = { template: <span class=\"hljs-string\">'&lt;div&gt;bar&lt;/div&gt;'</span> }\n\n<span class=\"hljs-comment\">// 2. 定义路由</span>\n<span class=\"hljs-comment\">// 每个路由应该映射一个组件。 其中\"component\" 可以是</span>\n<span class=\"hljs-comment\">// 通过 Vue.extend() 创建的组件构造器，</span>\n<span class=\"hljs-comment\">// 或者，只是一个组件配置对象。</span>\n<span class=\"hljs-comment\">// 我们晚点再讨论嵌套路由。</span>\n<span class=\"hljs-keyword\">const</span> routes = [\n  { path: <span class=\"hljs-string\">'/foo'</span>, component: Foo },\n  { path: <span class=\"hljs-string\">'/bar'</span>, component: Bar }\n]\n\n<span class=\"hljs-comment\">// 3. 创建 router 实例，然后传 `routes` 配置</span>\n<span class=\"hljs-comment\">// 你还可以传别的配置参数, 不过先这么简单着吧。</span>\n<span class=\"hljs-keyword\">const</span> router = <span class=\"hljs-keyword\">new</span> VueRouter({\n  routes <span class=\"hljs-comment\">// （缩写）相当于 routes: routes</span>\n})\n\n<span class=\"hljs-comment\">// 4. 创建和挂载根实例。</span>\n<span class=\"hljs-comment\">// 记得要通过 router 配置参数注入路由，</span>\n<span class=\"hljs-comment\">// 从而让整个应用都有路由功能</span>\n<span class=\"hljs-keyword\">const</span> app = <span class=\"hljs-keyword\">new</span> Vue({\n  router\n}).$mount(<span class=\"hljs-string\">'#app'</span>)\n\n<span class=\"hljs-comment\">// 现在，应用已经启动了！</span>\n</code></pre>\n<p>你可以看看这个例子\n<a href=\"http://jsfiddle.net/yyx990803/xgrjzsup/\" target=\"_blank\">live</a>。</p>\n<p>要注意，当 <code>&lt;router-link&gt;</code> 对应的路由匹配成功，将自动设置 class 属性值  <code>.router-link-active</code>。查看 <a href=\"../api/router-link.html\">API 文档</a> 学习更多相关内容。</p>\n\n                                \n                                "
}